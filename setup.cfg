[metadata]
name = sixkeys
version = attr: sixkeys.__version__
description = Six Keys Criticality: A comprehensive framework for neural criticality analysis and consciousness state assessment
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/yourusername/sixkeys
author = You Yang Hou
author_email = your.email@example.com
license = BSD-3-Clause
license_files = LICENSE
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Science/Research
    Intended Audience :: Healthcare Industry
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Topic :: Scientific/Engineering :: Information Analysis
    Topic :: Scientific/Engineering :: Physics
    Topic :: Software Development :: Libraries :: Python Modules

[options]
packages = find:
python_requires = >=3.8
include_package_data = True
zip_safe = False
install_requires =
    numpy>=1.21.0
    scipy>=1.7.0
    matplotlib>=3.5.0
    pandas>=1.3.0
    networkx>=2.6
    scikit-learn>=1.0.0
    tqdm>=4.62.0
    pyyaml>=6.0

[options.packages.find]
where = .
include = sixkeys*
exclude = tests*

[options.extras_require]
dev =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    black>=22.0.0
    flake8>=5.0.0
    isort>=5.10.0
    mypy>=0.991
    pre-commit>=2.20.0
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.0.0
    nbsphinx>=0.8.0
docs =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.0.0
    nbsphinx>=0.8.0
    myst-parser>=0.18.0
    sphinx-autodoc-typehints>=1.19.0
tests =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-xdist>=2.5.0
    hypothesis>=6.0.0
notebooks =
    jupyter>=1.0.0
    ipykernel>=6.0.0
    ipywidgets>=8.0.0
    plotly>=5.0.0
    seaborn>=0.11.0
all =
    sixkeys[dev,docs,tests,notebooks]

[options.entry_points]
console_scripts =
    sixkeys-analyze = sixkeys.scripts.analyze:main
    sixkeys-demo = sixkeys.examples.basic_usage:main

[options.package_data]
sixkeys = data/*.yaml, data/*.json, examples/*.py

# Flake8 configuration
[flake8]
max-line-length = 88
extend-ignore = E203, E266, E501, W503, F403, F401
max-complexity = 18
select = B,C,E,F,W,T4,B9
exclude =
    .git,
    __pycache__,
    docs/source/conf.py,
    old,
    build,
    dist,
    .eggs,
    *.egg-info,
    .venv,
    venv,
    .env,
    env
per-file-ignores =
    __init__.py:F401
    tests/*.py:F401,F811

# MyPy configuration (backup for tools that don't support pyproject.toml)
[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[mypy-matplotlib.*]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[mypy-sklearn.*]
ignore_missing_imports = True

[mypy-networkx.*]
ignore_missing_imports = True

[mypy-tqdm.*]
ignore_missing_imports = True

# Coverage configuration (backup)
[coverage:run]
source = sixkeys
omit =
    */tests/*
    */test_*
    setup.py
    */examples/*
    */scripts/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Tool configuration for older tools
[tool:pytest]
minversion = 6.0
addopts = -ra -q --strict-markers --strict-config
testpaths = tests
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    gpu: marks tests that require GPU
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Wheel configuration
[bdist_wheel]
universal = 0

# Setuptools SCM (if using version from git tags)
[tool:setuptools_scm]
write_to = sixkeys/_version.py
write_to_template = '__version__ = "{version}"'

# Aliases for common commands
[aliases]
test = pytest

# Additional metadata
[egg_info]
tag_build = 
tag_date = 0